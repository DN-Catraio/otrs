FROM docker.io/centos

ENV MYSQL_DBHOST mariadb-otrs
ENV MYSQL_DBNAME otrs
ENV MYSQL_DBUSER otrs
ENV MYSQL_DBPASS otrs
ENV CURL "curl -d action="/otrs/installer.pl" -d Action="Installer""
ENV SYSTEMID "`< /dev/urandom tr -dc 0-9 | head -c${1:-2};echo;`"

## VARIAVEIS

ENV FQDN "suporte.eftech.com.br"
ENV ADMINEMAIL "suporte@eftech.com.br"
ENV ORGANIZATION "EF-TECH"



RUN yum -y install epel-release && yum -y update

RUN yum -y install \
	"perl(Crypt::Eksblowfish::Bcrypt)" \
	"perl(JSON::XS)" \
	"perl(Mail::IMAPClient)" \
	"perl(Authen::NTLM)" \
	"perl(ModPerl::Util)" \
	"perl(Text::CSV_XS)" \
	"perl(FindBin)" \
	"perl(DBD::mysql)" \
	"perl(YAML::XS)"


RUN yum -y install \
	httpd mod_ssl \
	openssl \
	cronie
 
RUN yum -y install http://ftp.otrs.org/pub/otrs/RPMS/rhel/7/otrs-6.0.6-01.noarch.rpm

RUN yum -y clean all && rm -rf /var/cache/yum


RUN su -c '/opt/otrs/bin/Cron.sh start' -s /bin/bash otrs

# RUN su -c 'bin/otrs.Daemon.pl start' -s /bin/bash otrs

RUN { \
	echo '#!/bin/bash'; \
	echo ; \
	echo 'crond -p'; \
	echo 'status=$?'; \
	echo 'if [ $status -ne 0 ]; then'; \
	echo '  echo "Failed to start crond_process: $status"'; \
	echo '  exit $status'; \
	echo 'fi';  \
	echo ; \
	echo 'su -c "/opt/otrs/bin/otrs.Daemon.pl start" -s /bin/bash otrs'; \
	echo 'status=$?'; \
	echo 'if [ $status -ne 0 ]; then'; \
        echo '  echo "Failed to start otrs.Daemon.pl: $status"'; \
        echo '  exit $status'; \
        echo 'fi';  \
	echo ; \
        echo 'httpd -f /etc/httpd/conf/httpd.conf -D FOREGROUND'; \
        echo 'status=$?'; \
        echo 'if [ $status -ne 0 ]; then'; \
        echo '  echo "Failed to start httpd_process: $status"'; \
        echo '  exit $status'; \
        echo 'fi'; \
	echo ; \
	echo 'while sleep 60; do'; \
	echo '	ps aux | grep otrs.Daemon.pl | grep -q -v grep'; \
	echo '	PROCESS_1_STATUS=$?' ; \
	echo '  ps aux |grep crond |grep -q -v grep'; \
	echo '  PROCESS_2_STATUS=$?'; \
	echo '  ps aux |grep httpd |grep -q -v grep'; \
	echo '  PROCESS_3_STATUS=$?'; \
	echo '  if [ $PROCESS_1_STATUS -ne 0 -o $PROCESS_2_STATUS -ne 0 -o $PROCESS_3_STATUS -ne 0 ]; then'; \
	echo '    echo "One of the processes has already exited."'; \
	echo '    exit 1'; \
	echo '  fi'; \
	echo 'done'; \
	echo; \
    } > /entrypoint.sh && chmod 755 /entrypoint.sh



# VOLUME ["/var/www/html"]

EXPOSE 80/tcp 443/tcp 

ENTRYPOINT ["/entrypoint.sh"]

# CMD ["-D", "FOREGROUND"]
